# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\pocs\pyqt\basicSocketUi.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os
import json
import sys
import asyncio
import websockets
from dotenv import load_dotenv

load_dotenv(dotenv_path='pocs/pyqt/.qt.env')


class Ui_SocketDesignerPoc(object):
    def __init__(self,server_socket_url):
        self.socket_url = server_socket_url
        
    def setupUi(self, SocketDesignerPoc):
        SocketDesignerPoc.setObjectName("SocketDesignerPoc")
        SocketDesignerPoc.resize(835, 336)
        
        self.centralwidget = QtWidgets.QWidget(SocketDesignerPoc)
        self.centralwidget.setObjectName("centralwidget")
        
        self.socketConnect = QtWidgets.QPushButton(self.centralwidget)
        self.socketConnect.setGeometry(QtCore.QRect(20, 30, 141, 21))
        self.socketConnect.setObjectName("socketConnect")
        self.socketConnect.clicked.connect(self.clicked)
        
        self.textArea = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.textArea.setGeometry(QtCore.QRect(20, 60, 681, 161))
        self.textArea.setObjectName("textArea")
        
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setEnabled(True)
        self.textEdit.setGeometry(QtCore.QRect(20, 230, 431, 31))
        self.textEdit.setAutoFillBackground(False)
        self.textEdit.setObjectName("textEdit")
        
        self.sendMessage = QtWidgets.QPushButton(self.centralwidget)
        self.sendMessage.setGeometry(QtCore.QRect(590, 230, 111, 31))
        self.sendMessage.setObjectName("sendMessage")
        self.sendMessage.clicked.connect(self.run_socket)
        
        self.endpointIndicator = QtWidgets.QLabel(self.centralwidget)
        self.endpointIndicator.setGeometry(QtCore.QRect(20, 10, 101, 16))
        self.endpointIndicator.setObjectName("endpointIndicator")
        
        self.endpointValue = QtWidgets.QLabel(self.centralwidget)
        self.endpointValue.setGeometry(QtCore.QRect(130, 10, 321, 16))
        self.endpointValue.setObjectName("endpointValue")
        
        SocketDesignerPoc.setCentralWidget(self.centralwidget)
        
        self.statusbars = QtWidgets.QStatusBar(SocketDesignerPoc)
        self.statusbars.setObjectName("statusbars")
        
        SocketDesignerPoc.setStatusBar(self.statusbars)

        self.retranslateUi(SocketDesignerPoc)
        QtCore.QMetaObject.connectSlotsByName(SocketDesignerPoc)

    def retranslateUi(self, SocketDesignerPoc):
        _translate = QtCore.QCoreApplication.translate
        SocketDesignerPoc.setWindowTitle(_translate("SocketDesignerPoc", "MainWindow"))
        self.socketConnect.setText(_translate("SocketDesignerPoc", "Connect"))
        self.sendMessage.setText(_translate("SocketDesignerPoc", "SendMessage"))
        self.endpointIndicator.setText(_translate("SocketDesignerPoc", "websocket endpoint:"))
        self.endpointValue.setText(_translate("SocketDesignerPoc", "empty"))
    
    async def connect_websocket(self):
        async with websockets.connect(self.socket_url) as websocket:
            message='Test Message sent'
            
            json_message={
                'action':'send_message',
                'message':message
            }
            await websocket.send(json.dumps(json_message))
            self.textArea.appendPlainText(f'Client sent:{message}')
   

            answer = await websocket.recv()
            self.textArea.appendPlainText(f'Server got:{answer}')
            
    def run_socket(self):
        asyncio.run(self.connect_websocket())
        
    def clicked(self):
        self.endpointValue.setText(self.socket_url)  
        


if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    SocketDesignerPoc = QtWidgets.QMainWindow()
    
    ui = Ui_SocketDesignerPoc(os.getenv('WEB_SOCKET_CLIENT2SERVER_URL'))
    ui.setupUi(SocketDesignerPoc)
    SocketDesignerPoc.show()
    
    sys.exit(app.exec_())
